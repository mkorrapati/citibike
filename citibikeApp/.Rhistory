View(airlines)
data("flights")   # flights that departed NYC in 2013
dim(flights)
glimpse(flights)
flights_sub<-select(flights,year,month,day,carrier,flight,dep_delay,sched_dep_time,dep_time)
flights_group<-group_by(flights_sub,year,month)
flights_worst<-filter(flights_group,dep_delay==max(dep_delay,na.rm = T))
flights_best<-filter(flights_group,dep_delay==min(dep_delay,na.rm = T))
flights_bestworst <- bind_rows(flights_best,flights_worst)
flights_bestworst
flights_bw_ord<-arrange(flights_bestworst,month)
flights_bestworst
flights_bw_ord
View(flights_bw_ord)
flights_bestworst_ord <- flights %>%
select(year,month,day,carrier,flight,dep_delay,sched_dep_time,dep_time) %>%
group_by(year,month) %>%
filter(dep_delay == min(dep_delay,na.rm = T) | dep_delay == max(dep_delay, na.rm = T) )%>%
arrange(month)
flights_bestworst_ord # executes prev step only now we first call it
summarise(flights) # check which columns have NAs
summarise(flights) # check which columns have NAs
data("flights")   # flights that departed NYC in 2013
summary(flights) # check which columns have NAs
model_data<-flights%>%
filter(!is.na(arr_delay) & !is.na(dep_delay) & !is.na(distance)) # remove rows with NAs
model_data<-flights%>%
filter(!is.na(arr_delay) & !is.na(dep_delay) & !is.na(distance) & !is.na(air_time))%>%
# new code
mutate(gain = (dep_delay - arr_delay))%>% # calculate new column gain
mutate(speed = (distance/air_time))%>% # calculate new column speed
select(year, month,day, arr_delay, dep_delay, distance, carrier, origin,dest, gain,speed)
model_data<-flights%>%
filter(!is.na(arr_delay) & !is.na(dep_delay) & !is.na(distance) & !is.na(air_time))%>%
mutate(gain = (dep_delay - arr_delay))%>%
mutate(speed = (distance/air_time))%>%
select(year, month, day, arr_delay, dep_delay, distance, carrier, origin,dest, gain,speed)%>%
# new code
left_join(airlines,by = c('carrier' = 'carrier'))%>%  # join with airlines for airline name
inner_join(y=airports, by = c('origin'='faa'))%>% # join with airport for origin airport name
inner_join(y=airports, by = c('dest'='faa'))%>% # join with airport for destination airport name
select(year, month,day, arr_delay, dep_delay, distance, carrier,
origin,dest, gain,speed,name, name.x,name.y)%>%
rename(dest.airport=name,airline.name=name.x,origin.airport=name.y)
glimpse(model_data)
library(caret)
set.seed(1000)
index <- createDataPartition(model_data$gain, p=0.80, list=FALSE)
testset <- model_data[-index,]
trainset <- model_data[index,]
dim(trainset)
dim(testset)
model_local<-train(form = gain~speed+distance+dep_delay+carrier,
data = trainset,
method = 'lm',
metric ='RMSE',
trControl = trainControl(method = "cv"))
print(model_local)
summary(model_local$finalModel)
new_data<-subset(testset,select = -gain)
results<-predict(object = model_local,newdata = new_data)
test.results<-data.frame(obs=testset$gain,pred=results)
defaultSummary(test.results)
trainset$prediction <-model_local$finalModel$fitted.values
trainset$data<-"train"
testset$prediction <-test.results$pred
testset$data<-"test"
model_data_pred<-bind_rows(trainset,testset)
model_deciles <- model_data_pred%>%
mutate(decile = ntile(desc(prediction),10))%>%
group_by(decile,data) %>%
summarize(gain = mean(gain)) %>%
select(decile, gain,data)
model_deciles %>%
ggplot(aes(factor(decile), gain, fill = data)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = 'Average gain by predicted decile', x = 'Decile', y = 'Minutes')+
theme_wsj()
carrier<-model_data_pred%>%
group_by(airline.name)%>%
summarize(gain = mean(gain), prediction = mean(prediction), freq = n())%>%
filter(freq>10000)
ggplot(carrier, aes(gain, prediction)) +
geom_point(alpha = 0.75, color = 'red', shape = 3) +
geom_abline(intercept = 0, slope = 1, alpha = 0.15, color = 'blue') +
geom_text(aes(label = substr(airline.name, 1, 20)), size = 3, alpha = 0.75, vjust = -1) +
labs(title='Average Gains Forecast', x = 'Actual', y = 'Predicted')+
theme_economist()
AA<-model_data_pred%>%
filter(carrier=='AA')%>%
select(dest.airport,gain,prediction,data)%>%
group_by(dest.airport,data)%>%
summarize(gain=mean(gain),prediction=mean(prediction),freq=n())%>%
filter(freq>50)
ggplot(AA, aes(gain, prediction,color=data)) +
geom_point(alpha = 0.75, shape = 3) +
geom_abline(intercept = 0, slope = 1, alpha = 0.15, color = 'blue') +
geom_text(aes(label = substr(dest.airport, 1, 15)), size = 3, alpha = 1, vjust = -1,check_overlap = T) +
labs(title='Average Gains Forecast', x = 'Actual', y = 'Predicted')+
theme_gdocs()
library(RMySQL)
install.packages('RMySQL')
library(RMySQL)
drv<-dbDriver(drvName = "MySQL")
con = dbConnect(drv,
dbname = "dplyr",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
dbListTables(con)
flights_ext_db<-dbReadTable(con, "dplyr")
glimpse(as.tbl(flights_ext_db))
flts_sample<-dbGetQuery(con,"SELECT * FROM dplyr limit 10;")
library(dplyr)
flights.db<-tbl(con,"dplyr")
install.packages('dbplyr')
flights.db<-tbl(con,"dplyr")
glimpse(flights.db)
mySQL = src_mysql( dbname = "dplyr",
host = "courses.csrrinzqubik.us-east-1.rds.amazonaws.com",
port = 3306,
user = "student",
password = "datacamp")
flights.db<-tbl(src = mySQL, from = "dplyr" )
flights_bestworst.db <- flights.db %>%
select(year,month,day,carrier,flight,dep_delay,dep_time) %>%
group_by(year,month) %>%
filter(dep_delay == min(dep_delay) | dep_delay == max(dep_delay) )%>%
arrange(month)
flights_bestworst.db
library(RPostgreSQL)
install.packages('RPostgreSQL')
library(RPostgreSQL)
myPostgres<- src_postgres(dbname="spam",
host="rohit-lubuntu",#192.168.15.254
port=5432,
user="rohit",
password="rohit123")
flights_bestworst.db <- flights.db %>%
select(year,month,day,carrier,flight,dep_delay,dep_time) %>%
group_by(year,month) %>%
filter(dep_delay == min(dep_delay) | dep_delay == max(dep_delay) )%>%
arrange(month)
explain(flights_bestworst.db)
swirl()
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
str(sub1)
table(sub1$subject)
names(sub1[1:12])
myedit('showXY.R')
showMe(c(1:6))
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myedit('myplclust.R')
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562,563)]))
dim(svd1$u)
bye()
library(dplyr)
library(dplyr)
library(ggplot2)
library(nycflights13)
library(ggthemes)
data("flights")   # flights that departed NYC in 2013
data("airports")  # metadata about airports
data("airlines")  # lookup table for airline with carrier codes
dim(flights)
dim(airports)
dim(airlines)
head(flights)
head(airports)
head(airlines)
glimpse(flights)
str(flights)
glimpse(airports)
glimpse(airlines)
flights_sub<-select(flights,year,month,day,carrier,flight,dep_delay,sched_dep_time,dep_time)
flights_group<-group_by(flights_sub,year,month)
flights_worst<-filter(flights_group,dep_delay==max(dep_delay,na.rm = T))
flights_best<-filter(flights_group,dep_delay==min(dep_delay,na.rm = T))
flights_bestworst <- bind_rows(flights_best,flights_worst)
flights_bw_ord<-arrange(flights_bestworst,month)
flights_bw_ord
View(flights_bw_ord)
flights_bestworst_ord <- flights %>%
select(year,month,day,carrier,flight,dep_delay,sched_dep_time,dep_time) %>%
group_by(year,month) %>%
filter(dep_delay == min(dep_delay,na.rm = T) | dep_delay == max(dep_delay, na.rm = T) )%>%
arrange(month)
flights_bestworst_ord
model_data<-flights%>%
filter(!is.na(arr_delay) & !is.na(dep_delay) & !is.na(distance)) # remove rows with NAs
model_data<-flights%>%
filter(!is.na(arr_delay) & !is.na(dep_delay) & !is.na(distance) & !is.na(air_time))%>%
# new code
mutate(gain = (dep_delay - arr_delay))%>% # calculate new column gain
mutate(speed = (distance/air_time))%>% # calculate new column speed
select(year, month,day, arr_delay, dep_delay, distance, carrier, origin,dest, gain,speed)
model_data<-flights%>%
filter(!is.na(arr_delay) & !is.na(dep_delay) & !is.na(distance) & !is.na(air_time))%>%
mutate(gain = (dep_delay - arr_delay))%>%
mutate(speed = (distance/air_time))%>%
select(year, month, day, arr_delay, dep_delay, distance, carrier, origin,dest, gain,speed)%>%
# new code
left_join(airlines,by = c('carrier' = 'carrier'))%>%  # join with airlines for airline name
inner_join(y=airports, by = c('origin'='faa'))%>% # join with airport for origin airport name
inner_join(y=airports, by = c('dest'='faa'))%>% # join with airport for destination airport name
select(year, month,day, arr_delay, dep_delay, distance, carrier,
origin,dest, gain,speed,name, name.x,name.y)%>%
rename(dest.airport=name,airline.name=name.x,origin.airport=name.y)
glimpse(model_data)
library(caret)
set.seed(1000)
index <- createDataPartition(model_data$gain, p=0.80, list=FALSE)
testset <- model_data[-index,]
testset <- model_data[-index,]
trainset <- model_data[index,]
dim(trainset)
dim(testset)
model_local<-train(form = gain~speed+distance+dep_delay+carrier,
data = trainset,
method = 'lm',
metric ='RMSE',
trControl = trainControl(method = "cv"))
print(model_local)
summary(model_local$finalModel)
new_data<-subset(testset,select = -gain)
results<-predict(object = model_local,newdata = new_data)
test.results<-data.frame(obs=testset$gain,pred=results)
defaultSummary(test.results)
trainset$prediction <-model_local$finalModel$fitted.values
trainset$data<-"train"
testset$prediction <-test.results$pred
testset$data<-"test"
model_data_pred<-bind_rows(trainset,testset)
?desc
?ntile
model_deciles <- model_data_pred%>%
mutate(decile = ntile(desc(prediction),10))%>%
group_by(decile,data) %>%
summarize(gain = mean(gain)) %>%
select(decile, gain,data)
model_deciles
model_deciles %>%
ggplot(aes(factor(decile), gain, fill = data)) +
geom_bar(stat = 'identity', position = 'dodge') +
labs(title = 'Average gain by predicted decile', x = 'Decile', y = 'Minutes')+
theme_wsj()
dim(model_data_pred)
?summarise
glimpse(model_data_pred)
carrier<-model_data_pred%>%
group_by(airline.name)%>%
summarize(gain = mean(gain), prediction = mean(prediction), freq = n())%>%
filter(freq>10000)
glimpse(carrier)
ggplot(carrier, aes(gain, prediction)) +
geom_point(alpha = 0.75, color = 'red', shape = 3) +
geom_abline(intercept = 0, slope = 1, alpha = 0.15, color = 'blue') +
geom_text(aes(label = substr(airline.name, 1, 20)), size = 3, alpha = 0.75, vjust = -1) +
labs(title='Average Gains Forecast', x = 'Actual', y = 'Predicted')+
theme_economist()
AA<-model_data_pred%>%
filter(carrier=='AA')%>%
select(dest.airport,gain,prediction,data)%>%
group_by(dest.airport,data)%>%
summarize(gain=mean(gain),prediction=mean(prediction),freq=n())%>%
filter(freq>50)
ggplot(AA, aes(gain, prediction,color=data)) +
geom_point(alpha = 0.75, shape = 3) +
geom_abline(intercept = 0, slope = 1, alpha = 0.15, color = 'blue') +
geom_text(aes(label = substr(dest.airport, 1, 15)), size = 3, alpha = 1, vjust = -1,check_overlap = T) +
labs(title='Average Gains Forecast', x = 'Actual', y = 'Predicted')+
theme_gdocs()
url<- "http://stat-computing.org/dataexpo/2009/2008.csv.bz2"
download.file(url = url,destfile = "./2008.csv.bz2",method="curl")
library(readr)
flights_2008<-read_csv(file = "./2008.csv.bz2",progress = T,trim_ws = T)
library(readr)
library(dplyr)
library(RPostgreSQL)
myPostgres<- src_postgres(dbname="spam",
host="dsla.c0l5qodhdfzv.us-east-1.rds.amazonaws.com",#192.168.15.254
port=5432,
user="murali",
password="murali123")
myPostgres<- src_postgres(dbname="flights",
host="dsla.c0l5qodhdfzv.us-east-1.rds.amazonaws.com",#192.168.15.254
port=5432,
user="murali",
password="murali123")
dbListTables(myPostgres$con)
flights.db<-tbl(src = myPostgres, from = "flights_2008" )
flights_bestworst.db <- flights.db %>%
select(year,month,uniquecarrier,depdelay) %>%
group_by(year,month) %>%
filter(depdelay == min(depdelay) | depdelay == max(depdelay) )%>%
arrange(month)
flights_bestworst.db
system.time(collect(flights_bestworst.db))
airlines.db.own<-tbl(src = myPostgres, from = "airlines" )
airports.db.own<-tbl(src = myPostgres, from = "airports" )
summarise(flights.db)
summary(flights_bestworst.db)
summarise(flights.db)
flights.db<-tbl(src = myPostgres, from = "flights_2008" )
summarise(flights.db)
dim(flights.db)
str(flights.db)
glimpse(flights.db)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'))%>%
inner_join(y=airports.db.own, by = c('origin'='iata'))%>%
inner_join(y=airports.db.own, by = c('dest'='iata'))%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,name, name.x,name.y)%>%
rename(dest.airport=name)%>%
rename(airline.name=name.x)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=name.y)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'))%>%
inner_join(y=airports.db.own, by = c('origin'='iata'))%>%
inner_join(y=airports.db.own, by = c('dest'='iata'))%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,airport, Description,airport.x)%>%
rename(dest.airport=name)%>%
rename(airline.name=Description)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=airport.x)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'))%>%
inner_join(y=airports.db.own, by = c('origin'='iata'))%>%
inner_join(y=airports.db.own, by = c('dest'='iata'))%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,airport, Description,airport.x)%>%
rename(dest.airport=airport)%>%
rename(airline.name=Description)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=airport.x)
glimpse(airports.db.own)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'))%>%
inner_join(y=airports.db.own, by = c('origin'='iata'))%>%
inner_join(y=airports.db.own, by = c('dest'='iata'))%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,airport, Description,airport.x)%>%
rename(dest.airport=airport)%>%
rename(airline.name=Description)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=airport.x)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'),as  = "AL")%>%
inner_join(y=airports.db.own, by = c('origin'='iata'), as  = "origin_col")%>%
inner_join(y=airports.db.own, by = c('dest'='iata'), as  = "dest_col")%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,dest_col.airport, AL.Description,origin_col.airport)%>%
rename(dest.airport=dest_col.airport)%>%
rename(airline.name=AL.Description)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=origin_col.airport)
colnames(flights.db)[colSums(is.na(flights.db)) > 0]
glimpse(flights.db)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'))%>%
inner_join(y=airports.db.own, by = c('origin'='iata'))%>%
inner_join(y=airports.db.own, by = c('dest'='iata'))%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,airport, Description,airport.x)%>%
rename(dest.airport=airport)%>%
rename(airline.name=Description)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=airport.x)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'))%>%
inner_join(y=airports.db.own, by = c('origin'='iata'))%>%
inner_join(y=airports.db.own, by = c('dest'='iata'))%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,Description,airport.x)%>%
rename(airline.name=Description)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=airport.x)
head(model_data.2008)
summary(model_data.2008)
glimse(model_data.2008)
glimpse(model_data.2008)
model_data.2008<-flights.db%>%
filter(!is.na(arrdelay) & !is.na(depdelay) & !is.na(distance) & !is.na(airtime) & airtime>0)%>%
mutate(gain = depdelay - arrdelay)%>%
mutate(speed = distance/airtime)%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier, origin,dest, gain,speed)%>%
left_join(airlines.db.own, by = c('uniquecarrier' = 'Code'))%>%
inner_join(y=airports.db.own, by = c('origin'='iata'))%>%
inner_join(y=airports.db.own, by = c('dest'='iata'))%>%
select(year, month, arrdelay, depdelay, distance, uniquecarrier,
origin,dest, gain,speed,airport.y, Description,airport.x)%>%
rename(dest.airport=airport.y)%>%
rename(airline.name=Description)%>%  # Bug in dplyr causes us to do this thrice
rename(origin.airport=airport.x)
glimpse(model_data.2008)
library(h2o)
h2o.init(port = 54321,nthreads = -1)
model_data.db.h2o<-as.h2o(model_data.2008)
h2o.shutdown()
library(h2o)
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE) #  Connection successful!
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE) #  Connection successful!
install.packages('h2o')
install.packages("h2o")
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE) #  Connection successful!
remoteH2O.init(port = 54321,nthreads = -1)
library(h2o)
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE) #  Connection successful!
install.packages("h2o")
install.packages("h2o")
library(h2o)
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE) #  Connection successful!
install.packages("h2o", version='3.10.5.4')
install.packages("h2o", version = "3.10.5.4")
if ("package:h2o" %in% search()) { detach("package:h2o", unload=TRUE) }
if ("h2o" %in% rownames(installed.packages())) { remove.packages("h2o") }
install.packages("h2o", repos=(c("http://s3.amazonaws.com/h2o-release/h2o/master/1497/R", getOption("repos"))))
library(h2o)
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE) #  Connection successful!
library(dplyr)
library(RPostgreSQL)
myPostgres<- src_postgres(dbname="nyc-citibike-data",
host="dsla.c0l5qodhdfzv.us-east-1.rds.amazonaws.com",#192.168.15.254
port=5432,
user="murali",
password="murali123")
dbListTables(myPostgres$con)
nyc_2010.db<-tbl(src = myPostgres, from = "nyct2010" )
nyc_2010.db<-tbl(src = myPostgres, from = "nyct2010" )
glimpse(nyc_2010.db)
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE, port = 54321, nthreads = -1) #  Connection successful!
model_data.db.h2o<-as.h2o(nyc_2010.db)
remoteH2O.ls()
h2o.ls()
summary(nyc_2010.db)
colnames(nyc_2010.db)
h2o.dim(nyc_2010.db)
h2o.summary(nyc_2010.db)
h2o.dim(nyc_2010.db)
head(nyc_2010.db)
remoteH2O.shutdown()
library(h2o)
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE, port = 54321, nthreads = -1) #  Connection successful!
remoteH2O.shutdown()
h2o.shutdown()
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=FALSE, port = 54321, nthreads = -1) #  Connection successful!
remoteH2O <- h2o.init(ip='34.200.247.252', startH2O=TRUE, port = 54321, nthreads = -1) #  Connection successful!
shiny::runApp('DSLA1/citibike/citibike/citibikeApp')
setwd("~/DSLA1/citibike/citibike")
runApp('citibikeApp')
runApp('citibikeApp')
setwd("~/DSLA1/citibike/citibike")
source('global.R')
setwd("~/DSLA1/citibike/citibike/citibikeApp")
runApp()
setwd("~/DSLA1/citibike/citibike/citibikeApp")
runApp()
source('global.R')
library(RPostgreSQL)
library(lubridate)
library(h2o)
source('global.R')
library(RPostgreSQL)
myPostgres<- src_postgres(dbname="nyc-citibike-data",
host="dsla.c0l5qodhdfzv.us-east-1.rds.amazonaws.com",#192.168.15.254
port=5432,
user="murali",
password="murali123")
library(RPostgreSQL)
myPostgres<- src_postgres(dbname="nyc-citibike-data",
host="dsla.c0l5qodhdfzv.us-east-1.rds.amazonaws.com",#192.168.15.254
port=5432,
user="murali",
password="murali123")
